
@{
    ViewData["Title"] = "AddUser";
    Layout = "_Layout";
}

<h1>Add User</h1>

<form method="post" class="uk-form-stacked">

    <p v-if="Errors.length">
        <b>Please correct the following error(s):</b>
        <ul>
            <li class="uk-form-danger" v-for="error in Errors">{{ error }}</li>
        </ul>
    </p>
    <div class="uk-margin uk-grid-small">
        <label class="uk-form-label">Firstname:</label>
        <div class="uk-form-controls uk-margin">
            <input class="uk-input" type="text" placeholder="Enter firstname" v-model="FirstName" />
        </div>
    </div>
    <div class="uk-margin">
        <label class="uk-form-label">Lastname:</label>
        <div class="uk-form-controls">
            <input class="uk-input" type="text" placeholder="Enter lastname" v-model="LastName" />
        </div>
    </div>
    <div class="uk-margin">
        <label class="uk-form-label">E-mail:</label>
        <div class="uk-form-controls">
            <input class="uk-input" type="email" placeholder="Enter your Email" v-model="Email" />
        </div>
    </div>
    <div class="uk-margin">
        <label class="uk-form-label">Nationality</label>
        <div class="uk-form-controls">
            <input class="uk-input" type="text" placeholder="Enter Nationality" v-model="Nationality" />
        </div>
    </div>
    <div class="uk-margin">
        <label class="uk-form-label">Date of birth</label>
        <div class="uk-form-controls">
            <input class="uk-datepicker" type="date" v-model="BirthDate" />
        </div>
    </div>
    <div class="uk-margin">
        <label class="uk-form-label">Password:</label>
        <div class="uk-form-controls">
            <input class="uk-input" type="password" placeholder="Enter password" v-model="Password" />
        </div>
    </div>
    <div class="uk-margin">
        <label class="uk-form-label">Password repeat:</label>
        <div class="uk-form-controls">
            <input class="uk-input" type="password" placeholder="Repeat passwword" v-model="PasswordRepeat" />
        </div>
    </div>
    <div class="uk-margin">
        <div class="uk-form-controls">
            <label><input class="uk-radio" type="radio" value="Admin" v-model="IsAdmin">Admin</label>
        </div>
    </div>
    <div class="uk-margin">
        <div class="uk-form-controls">
            <label><input class="uk-radio" type="radio" value="Spotify" v-model="IsSpotifyDj">Spotify DJ</label>
        </div>
    </div>
</form>

<div class="uk-button-group">
    <a class="uk-button-primary explorer-button-margin" v-on:click="login()">Add</a>
    <a class="uk-button-danger explorer-button-margin" asp-controller="Home" asp-action="Home">Go back</a>
</div>

@section Scripts{
    <script>
        var baseUrl = 'https://localhost:5001/api/countries';
        var app = new Vue({
            el: '#app',
            data: {
                FirstName: "",
                LastName: "",
                Nationality: "",
                BirthDate: "",
                Email: "",
                Password: "",
                PasswordRepeat: "",
                IsAdmin: "",
                CheckData: "",
                IsSpotifyDj:"",
                Errors: []
            },

            created: function () {
                var token = sessionStorage.getItem('token');
                if (token == null) {
                    window.location.href = window.location.origin + '/NotAllowed';
                }
                var jwt = JSON.parse(atob(token.split('.')[1]));
                if (jwt != null && jwt.role != "Admin") {
                    window.location.href = window.location.origin + '/NotAllowed';
                }
            },

            methods: {
                login: function () {
                    var self = this;
                    var regEmail = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                    var date = new Date();
                    var today = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();
                    var minDate = (date.getFullYear() - 12) + '-' + (date.getMonth() + 1) + '-' + date.getDate();

                    self.CheckData = true;
                    self.Errors = new Array();
                    if (self.FirstName.length == 0) {
                        self.CheckData = false;
                        self.Errors.push("Enter a valid firstname");
                    }
                    if (self.LastName.length == 0) {
                        self.CheckData = false;
                        self.Errors.push("Enter a valid lastname");
                    }
                    if (!regEmail.test(self.Email)) {
                        self.CheckData = false;
                        self.Errors.push("Enter a valid email");
                    }
                    if (!self.Password.match(/(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/)) {
                        self.CheckData = false;
                        self.Errors.push("Enter a valid password");
                    }
                    if (self.Password != self.PasswordRepeat) {
                        self.CheckData = false;
                        self.Errors.push("passwords do not match");
                    }
                    if (self.BirthDate.length == 0) {
                        self.CheckData = false;
                        self.Errors.push("Enter a valid Birth date")
                    }
                    if (self.BirthDate > today) {
                        self.CheckData = false;
                        self.Errors.push("You cannot be born in the future");
                    }
                    if (self.BirthDate > minDate) {
                        self.CheckData = false;
                        self.Errors.push("User must be at least 12 years old");
                    }
                    if (self.CheckData == true) {
                        self.AddUser()
                    }
                },

                AddUser: function() {
                    var self = this;
                    var user = {
                        firstname: self.FirstName,
                        lastname: self.LastName,
                        email: self.Email,
                        nationality: self.Nationality,
                        birthDate: self.BirthDate,
                        password: self.Password,
                        role: "Visitor",
                        isSpotifyDj: false
                    };
                    if (self.IsAdmin.length > 0) user.role = "Admin";
                    if (self.IsSpotifyDj.length > 0) user.isSpotifyDj = true;

                    axios.post(`${baseUrl}/users/register`, user)
                        .then(function (response) {
                            alert("User has been added succesfully");
                            self.FirstName = "";
                            self.LastName = "";
                            self.BirthDate = "";
                            self.Nationality = "";
                            self.Email = "";
                            self.Password = "";
                            self.PasswordRepeat = "";
                        })
                        .catch(function (error) {
                            self.Errors.push(error.response.data);
                        });
                }
            }
        });
    </script>
}


